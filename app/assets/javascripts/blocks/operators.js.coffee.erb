# 「演算」ジャンル

<%
  category = 'operators'
  color = 93
%>

# 変数:(　) + (　)
# 変数:(　) - (　)
# 変数:(　) * (　)
# 変数:(　) / (　)
<%
  [
    ['add', '＋', 'ADDITIVE', '+'],
    ['minus', 'ー', 'ADDITIVE', '-'],
    ['multiply', '×', 'MULTIPLICATIVE', '*'],
    ['divide', '÷', 'MULTIPLICATIVE', '/'],
  ].each do |suffix, operator_label, order_suffix, operator|
    n = "#{category}_#{suffix}"
%>

Blockly.Blocks['<%= n %>'] =
  init: ()->
    @.setHelpUrl('')
    @.setColour(<%= color %>)
    @.appendValueInput('A').setCheck('Number')
    @.appendValueInput('B').setCheck('Number').appendField('<%= operator_label %>')
    @.setInputsInline(true)
    @.setOutput(true, 'Number')
    @.setTooltip('')

Blockly.Ruby['<%= n %>'] = (block) ->
  order = Blockly.Ruby.ORDER_<%= order_suffix %>
  a = Blockly.Ruby.valueToCode(block, 'A', order) || '0'
  b = Blockly.Ruby.valueToCode(block, 'B', order) || '0'
  [a + ' <%= operator %> ' + b, order]
<% end %>

# 条件:(　) < (　)
# 条件:(　) <= (　)
# 条件:(　) = (　)
# 条件:(　) => (　)
# 条件:(　) > (　)
<%
  [
    ['compare_gt', '＜', '<'],
    ['compare_gte', '≦', '<='],
    ['compare_eq', '＝', '=='],
    ['compare_lte', '≧', '>='],
    ['compare_lt', '＞', '>'],
  ].each do |suffix, operator_label, operator|
    n = "#{category}_#{suffix}"
%>

Blockly.Blocks['<%= n %>'] =
  init: ()->
    @.setHelpUrl('')
    @.setColour(<%= color %>)
    @.setOutput(true, 'Boolean')
    @.appendValueInput('A')
    @.appendValueInput('B').appendField('<%= operator_label %>')
    @.setInputsInline(true)
    @.setTooltip('')

Blockly.Ruby['<%= n %>'] = (block) ->
  order = Blockly.Ruby.ORDER_RELATIONAL;
  a = Blockly.Ruby.valueToCode(block, 'A', order) || '0'
  b = Blockly.Ruby.valueToCode(block, 'B', order) || '0'
  [a + ' <%= operator %> ' + b, order]
<% end %>
